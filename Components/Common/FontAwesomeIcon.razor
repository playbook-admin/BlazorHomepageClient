@namespace BlazorClient.Components
@using System.Globalization
@inject IGlobalStateContext GlobalStateContext

<i class="@IconClass" style="@CombinedStyle" @onclick="HandleClick"></i>

@code {
    [Parameter]
    public string Icon { get; set; } = string.Empty;

    [Parameter]
    public string Size { get; set; } = string.Empty;

    [Parameter]
    public bool Spin { get; set; }

    [Parameter]
    public string Style { get; set; } = string.Empty;

    [Parameter]
    public string Opacity { get; set; } = "1";  // Default to visible

    [Parameter]
    public string Cursor { get; set; } = "pointer";

    [Parameter]
    public bool Loading { get; set; }

    [Parameter]
    public EventCallback OnClick { get; set; }

    private string IconClass => BuildIconClass();

    private string CombinedStyle => $"{Style}; opacity: {Opacity}; cursor: {Cursor}";

    private string BuildIconClass()
    {
        var classes = new List<string> { "fas" };
        if (!string.IsNullOrEmpty(Icon))
        {
            classes.Add($"fa-{Icon}");
        }
        if (Spin)
        {
            classes.Add("fa-spin");
        }
        if (!string.IsNullOrEmpty(Size))
        {
            classes.Add($"fa-{Size}");
        }
        return string.Join(" ", classes);
    }

    private async Task HandleClick()
    {
        if (OnClick.HasDelegate)
        {
            await OnClick.InvokeAsync(null);
        }
    }
}

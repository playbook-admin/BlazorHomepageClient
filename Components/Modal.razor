@namespace BlazorClient.Components
@inject IGlobalStateContext GlobalStateContext
@inject ISessionUserContext SessionUserContext
@inject NavigationManager Navigation


@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback<bool> IsVisibleChanged { get; set; }
    [Parameter] public RenderFragment Header { get; set; }
    [Parameter] public RenderFragment Body { get; set; }
    [Parameter] public RenderFragment Footer { get; set; }

    private void CloseModal()
    {
        IsVisible = false;
        IsVisibleChanged.InvokeAsync(IsVisible);
    }
}

@if (IsVisible)
{
    <div class="modal" style="display: block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" @onclick="CloseModal">&times;</button>
                    @Header
                </div>
                <div class="modal-body">
                    @Body
                </div>
                <div class="modal-footer">
                    @Footer
                </div>
            </div>
        </div>
    </div>
}

<style>
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .modal-dialog {
        background: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
        padding: 1rem;
        border-bottom: 1px solid #dee2e6;
    }

    .modal-body {
        padding: 1rem;
    }

    .modal-footer {
        padding: 1rem;
        border-top: 1px solid #dee2e6;
    }

    .close {
        background: transparent;
        border: none;
        font-size: 1.5rem;
    }
</style>

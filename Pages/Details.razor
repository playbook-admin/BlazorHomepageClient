@page "/details/{photoId:int}/{albumId:int}/{albumCaption}"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IGlobalStateContext GlobalStateContext

@using System.Net.Http.Json
@using BlazorClient.Contexts

@code {
    [Parameter] public int AlbumId { get; set; }
    [Parameter] public int PhotoId { get; set; }
    [Parameter] public string AlbumCaption { get; set; } = string.Empty;

    private List<Photo> Photos = new();
    private int CurrentPhotoId;
    private string ApiAddress = string.Empty;
    private List<RenderFragment> NumberElements = [];


    protected override async Task OnInitializedAsync()
    {
        ApiAddress = GlobalStateContext.ApiAddress;
        CurrentPhotoId = PhotoId;

        if (CurrentPhotoId == 0)
        {
            await FetchRandomPhotoDetails();
        }
        else
        {
            await FetchPhotos(CurrentPhotoId);
            NumberElements = GenerateNumberElements();
        }
    }

    private List<RenderFragment> GenerateNumberElements()
    {
        var elements = new List<RenderFragment>();
        int page = GetPage(CurrentPhotoId); 

        foreach (var (photo, index) in Photos.Select((photo, index) => (photo, index)))
        {
            int pageNumber = index + 1;
            elements.Add(builder =>
            {
                builder.OpenElement(0, "div");
                builder.AddAttribute(1, "style", "display: inline;");

                if (pageNumber != page)
                {
                    builder.OpenElement(2, "a");
                    builder.AddAttribute(3, "href", GetDetailsUrl(photo.PhotoID));
                    builder.AddAttribute(4, "onclick", EventCallback.Factory.Create(this, () => SetDetails(photo.PhotoID)));
                    builder.AddContent(5, pageNumber.ToString());
                    builder.CloseElement();
                }
                else
                {
                    builder.OpenElement(6, "span");
                    builder.AddContent(7, pageNumber.ToString());
                    builder.CloseElement();
                }

                builder.CloseElement();
            });
        }

        return elements;
    }

    private async Task FetchPhotos(int photoId)
    {
        try
        {
            Photos = await Http.GetFromJsonAsync<List<Photo>>($"{ApiAddress}/api/details/{AlbumId}");
            CurrentPhotoId = photoId;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Could not contact server: {ex.Message}");
        }
    }

    private async Task FetchRandomPhotoDetails()
    {
        try
        {
            CurrentPhotoId = await Http.GetFromJsonAsync<int>($"{ApiAddress}/api/details/random");
            Photos = await Http.GetFromJsonAsync<List<Photo>>($"{ApiAddress}/api/details/{AlbumId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Could not contact server: {ex.Message}");
        }
    }

    private string GetDetailsUrl(int photoId)
    {
        return $"/details/{photoId}/{AlbumId}/{AlbumCaption}";
    }

    private void SetDetails(int photoId)
    {
        Navigation.NavigateTo($"/details/{photoId}/{AlbumId}/{AlbumCaption}");
        CurrentPhotoId = photoId;
    }

    private int GetPage(int pid)
    {
        var photo = Photos.FirstOrDefault(p => p.PhotoID == pid);
        return photo != null ? Photos.IndexOf(photo) + 1 : 0;
    }

    private int Page => GetPage(CurrentPhotoId);

    private int First => Photos.FirstOrDefault()?.PhotoID ?? 0;
    private int Last => Photos.LastOrDefault()?.PhotoID ?? 0;
    private int Prev => Page > 1 ? Photos[Page - 2].PhotoID : First;
    private int Next => Page < Photos.Count ? Photos[Page].PhotoID : Last;
    
    
    
    
    
    
    
    private class Photo
    {
        public int PhotoID { get; set; }
        public int AlbumID { get; set; }
        public string Caption { get; set; } = string.Empty;
    }
}

<div class="container container-fluid">
    <div class="row">
        <div class="row-height col">
            <div class="col-md-3 hidden-md hidden-sm hidden-xs col-md-height col-md-top custom-vertical-left-border custom-vertical-right-border grey-background">
                <div class="row">
                    <div class="coo-md-12">
                        <h4>@AlbumCaption</h4>
                    </div>
                </div>
            </div>
            <div class=" col-md-height col-md-9 co-sm-9 col-9">
                <div class="row">
                    <div class="buttonbar buttonbar-top">
                        <div class="col-lg-2 col-md-2 col-2"></div>
                        <div class="col-lg-3 col-md-3 col-sm-3 col-3">
                            <NavLink href="/albums">
                                <img id="FormView1_Image1" src="/images/button-gallery.gif" style="border-width: 0px;" alt="" />
                            </NavLink>
                            <NavLink href="@GetDetailsUrl(First)" @onclick="() => {SetDetails(First);}">
                                <img src="/images/button-first.gif" style="border-width: 0px;" alt="" />
                            </NavLink>
                            <NavLink href="@GetDetailsUrl(Prev)" @onclick="() => {SetDetails(Prev);}">
                                <img src="/images/button-prev.gif" style="border-width: 0px;" alt="" />
                            </NavLink>
                            <NavLink href="@GetDetailsUrl(Next)" @onclick="() => {SetDetails(Next);}">
                                <img src="/images/button-next.gif" style="border-width: 0px;" alt="" />
                            </NavLink>
                            <NavLink href="@GetDetailsUrl(Last)" @onclick="() => {SetDetails(Last);}">
                                <img src="/images/button-last.gif" style="border-width: 0px;" alt="" />
                            </NavLink>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                        <table class="view" cellspacing="0" cellpadding="0" id="FormView1" style="border-collapse: collapse; border-style:none; border-width: 0px;">
                            <tbody>
                                <tr>
                                    <td>
                                        @if (Photos.Count > 0)
                                        {
                                            var currentIndex = Page > 0 ? Page - 1 : 0;
                                            var currentPhoto = Photos[currentIndex];
                                            <p>@(currentPhoto.Caption)</p>
                                            <PhotoFrame>
                                                <img src="@($"{ApiAddress}/Handler/Index/PhotoID={CurrentPhotoId}/Size=L")" class="photo_198" style="border: 4px solid white; object-fit: contain; min-height: 500px; max-height: 500px;" alt="PhotoID @CurrentPhotoId" />
                                            </PhotoFrame>
                                            <p>
                                                <NavLink href="@($"{ApiAddress}/Handler/Download/{CurrentPhotoId}/Size=L")">
                                                    <img src="/images/button-download.gif" alt="download this photo" />
                                                </NavLink>
                                            </p>
                                        }
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="buttonbar buttonbar-bottom">
                        <div class="col-md-4 col-sm-3 col-2">
                            @foreach (var element in NumberElements)
                            {
                                @element
                            }
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-3 col-3">
                            <NavLink href="/albums">
                                <img id="FormView1_Image1" src="/images/button-gallery.gif" style="border-width: 0px;" alt="" />
                            </NavLink>
                            <NavLink href="@GetDetailsUrl(First)" @onclick="() => SetDetails(First)">
                                <img src="/images/button-first.gif" style="border-width: 0px;" alt="" />
                            </NavLink>
                            <NavLink href="@GetDetailsUrl(Prev)" @onclick="() => SetDetails(Prev)">
                                <img src="/images/button-prev.gif" style="border-width: 0px;" alt="" />
                            </NavLink>
                            <NavLink href="@GetDetailsUrl(Next)" @onclick="() => SetDetails(Next)">
                                <img src="/images/button-next.gif" style="border-width: 0px;" alt="" />
                            </NavLink>
                            <NavLink href="@GetDetailsUrl(Last)" @onclick="() => SetDetails(Last)">
                                <img src="/images/button-last.gif" style="border-width: 0px;" alt="" />
                            </NavLink>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

